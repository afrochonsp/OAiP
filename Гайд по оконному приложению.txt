https://www.youtube.com/watch?v=QbMVxkzTi54
Код для MyForm.cpp

#include "MyForm.h"
#include <Windows.h>

using namespace Variant1; //Название проекта

int WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int)
{
	Application::EnableVisualStyles();
	Application::SetCompatibleTextRenderingDefault(false);
	Application::Run(gcnew MyForm);
}

Не забудь перезагрузить программу после заполнения MyForm.cpp.
Также лучше переносить реализацию методов типа.
private: System::Void button1_Click(System::Object^  sender, System::EventArgs^  e);
из MyForm.h в MyForm.cpp, для этого нужно убрать {} из метода и поставить ;
Потом нужно кликнуть на название метода ПКМ и нажать быстрые действия
и рефакторинг, далее создать объявление или определение.
Чтобы использовать вторую форму, нужно дописать ей в .cpp файл
#include <Windows.h>.

Чтобы передать переменную в новую форму, нужно объявить публичную переменную 
в классе формы (в .h файле) и добавить новый конструктор, в котором мы 
присваиваем переменной полученное значение.
Лучше использовать указатели ^ на компоненты, так как можно будет менять
значения компонентов старой формы прямо из новой.
Чтобы использовать ивенты, нужно использовать примерно следующую запись:
listBox1->MouseClick += gcnew System::Windows::Forms::MouseEventHandler(this, &Variant1::MyForm::listBox1_OnMouseClick);
Где listBox1_OnMouseClick является созданной нами в .h файле функцией,
аргументы ктоторой должы совпадать с ивентом.
Visual Studio сама предложит дописать функцию после listBox1->MouseClick +=
Такие функции могут быть записаны и только в .cpp файле, но тогда нельзя
будет обращаться к приватным переменным формы, а значит
и ко всем её компонентам.
Проще использовать ивенты с помощью вкладки с молнией (там же где и свойства),
для этого нужно выбрать ивент и дважды по нему кликнуть.